apiVersion: apps/v1
kind: Deployment
metadata:
  name: stresspulse
  labels:
    app: stresspulse
    {{- with .Values.extraLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.extraAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: stresspulse
  template:
    metadata:
      labels:
        app: stresspulse
        {{- with .Values.extraLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.extraAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: stresspulse
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/app/stresspulse"]
          args:
            - "-cpu"
            - "{{ .Values.config.cpu }}"
            - "-drift"
            - "{{ .Values.config.drift }}"
            - "-pattern"
            - "{{ .Values.config.pattern }}"
            {{- if .Values.config.duration }}
            - "-duration"
            - "{{ .Values.config.duration }}"
            {{- end }}
            - "-period"
            - "{{ .Values.config.period }}"
            {{- if .Values.config.workers }}
            - "-workers"
            - "{{ .Values.config.workers }}"
            {{- end }}
            - "-log-level"
            - "{{ .Values.config.logLevel }}"
            {{- if .Values.config.metrics.enabled }}
            - "-metrics"
            {{- end }}
            {{- if .Values.config.fakeLogsEnabled }}
            - "-fake-logs"
            - "-fake-logs-type"
            - "{{ .Values.config.fakeLogsType }}"
            - "-fake-logs-interval"
            - "{{ .Values.config.fakeLogsInterval }}"
            {{- end }}
            {{- if .Values.config.memoryEnabled }}
            - "-memory"
            - "-memory-target"
            - "{{ .Values.config.memoryTargetMB }}"
            - "-memory-pattern"
            - "{{ .Values.config.memoryPattern }}"
            - "-memory-interval"
            - "{{ .Values.config.memoryInterval }}"
            {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.config.metrics.port }}
              protocol: TCP
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: TZ
              value: "UTC" 